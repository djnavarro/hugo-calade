<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>slumstyle on A minimal Hugo website</title>
    <link>/hugo-slum/tags/slumstyle/</link>
    <description>Recent content in slumstyle on A minimal Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/hugo-slum/tags/slumstyle/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tutorial part 5: Deploying to GitHub</title>
      <link>/hugo-slum/post/deploying-to-github/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/hugo-slum/post/deploying-to-github/</guid>
      <description>The usual advice for deploying a blogdown site is to deploy to Netlify rather than GitHub Pages, because there are a few peculiarities with GitHub Pages that make this difficult. However, I have an ingrained habit of using GitHub Pages, with each repository hosted at
https://username.github.io/reponame/To make that happen for a blogdown site there are three things you need to change from the usual defaults:
First, the site needs to be generated in the docs folder (which is what GitHub Pages expects) rather than the Hugo default which is to generate the site in the public folder.</description>
    </item>
    
    <item>
      <title>Tutorial part 4: Customising the header</title>
      <link>/hugo-slum/post/customising-headers/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/hugo-slum/post/customising-headers/</guid>
      <description>Within slumdown you can exercise quite a bit of control over the header at the top of each page within the YAML at the top of the post. There are three fields you can customise: image provides the path to the header image (relative to the static/ folder), caption is the caption text shown floating over the bottom right of the header image, and the profile picture that appears in the middle of the header.</description>
    </item>
    
    <item>
      <title>Tutorial part 3: Colour palettes in slumdown</title>
      <link>/hugo-slum/post/colour-palettes/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/hugo-slum/post/colour-palettes/</guid>
      <description>The slum theme for Hugo allows some degree of flexibility in visual styling, which is really nice when blogging. Most of the time I want my blog to use a consistent palette, but then there are occasions where I might want a single page to use a different colour scheme, and I don’t want to have to fiddle with low level settings to do that. Relatedly, one thing that has caused me frustration with blogdown is that the content generated on the R site doesn’t use the same visual style as the Hugo theme.</description>
    </item>
    
    <item>
      <title>Tutorial part 2: Writing a post</title>
      <link>/hugo-slum/post/writing-a-post/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/hugo-slum/post/writing-a-post/</guid>
      <description>The slum provides a simple Hugo theme intended primarily to be used in conjunction with the blogdown package, so posts take the form of R Markdown documents rather than plain markdown. I’m fairly certain that the theme supports plain markdown, but given that the appeal of blogdown lies in integrating R Markdown with the Hugo blogging system I’ll jump straight to it.
1. The YAML headerLike any R Markdown document, a post begins with the YAML header.</description>
    </item>
    
  </channel>
</rss>