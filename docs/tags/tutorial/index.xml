<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on A calade website</title>
    <link>/tags/tutorial/</link>
    <description>Recent content in tutorial on A calade website</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 10 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tutorial part 1: Getting started</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/getting-started/</guid>
      <description>The aim of caladown is to provide a simple Hugo template suitable for R users who want to build a website or start a blog, and is designed to be compatible with both blogdown and hugodown. In this tutorial, I&amp;rsquo;ll show you how to get started. The assumed reader for this tutorial is an R user who has some experience with R Markdown, but is unfamiliar with blogdown, hugodown, or Hugo itself.</description>
    </item>
    
    <item>
      <title>Tutorial part 2: Customising posts</title>
      <link>/post/customising-posts/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/customising-posts/</guid>
      <description>In general I want to use a consistent palette and header across a site, but there are occasions where I might want a single page to use a different style. I donâ€™t want to have to edit with low level settings to do that. In the second part of the tutorial I discuss this kind of customisation.</description>
    </item>
    
    <item>
      <title>Tutorial part 3: Deploying the site</title>
      <link>/post/deploying-the-site/</link>
      <pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/deploying-the-site/</guid>
      <description>The usual advice for deploying a blogdown or hugodown site is to deploy to Netlify rather than GitHub Pages, because there are a few peculiarities to GitHub Pages that can make it difficult. The third part of the tutorial walks you through both versions.</description>
    </item>
    
  </channel>
</rss>